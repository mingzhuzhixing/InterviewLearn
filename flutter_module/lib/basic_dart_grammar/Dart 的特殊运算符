1、运算符
   1、??=：赋值运算符（变量会 null 时才执行赋值操作）
   2、??：条件运算符（有点像简化版的三元运算符）
   例如：
   // 1. ??=
   // 当原来的变量有值时，那么 ??= 不执行
   // 原来的变量为null时，那么将值赋值给这个变量
   var name = null;
   name ??= "lilei";
   print(name); // lilei

   // 2. ??
   // ??前面的数据有值，那么就使用??前面的数据
   // ??前面的数据为null，那么就使用后面的值
   var name = null;
   var temp = name ?? "lilei";
   print(temp); // lilei

2、级联语法(..)
   Dart 可以使用级联语法 (..) 将任意对象的 变量赋值 或 方法调用 操作都变成 链式调用：
   例如：
   main(List<String> args) {
     // var p = Person();
     // p.name = "lqr";
     // p.run();
     // p.eat();

     // 级联运算符
     var p = Person()
       ..name = "lqr"
       ..eat()
       ..run();
   }

3、for 循环的使用
   Dart 支持 普通 for 循环，以及 for-in 循环：
   例如：
   // 1. 基础for循环
   for (var i = 0; i < 10; i++) {
     print(i);
   }

   // 2. 遍历数组
   var names = ["why", "cba", "cba"];
   for (var i = 0; i < names.length; i++) {
     print(names[i]);
   }

   for (var name in names) {
     print(name);
   }

   注意：while 和 do-while 和其他语言一致，break 和 continue 用法也是一致