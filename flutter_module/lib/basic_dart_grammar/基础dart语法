基础语法
一、变量
   Dart语言中所有变量都是一个对象，每个对象都是一个类的实例。数字类型（numbers）、函数和 null 也是对象。所有对象都继承自 Object 类。
   1、变量的声明  Dart语言是强类型语言
     声明并初始化一个变量：
     var blog = 'https://autoref.cn';

     如果一个对象没有限制单一类型，可以指定为 Object 或 dynamic 类型，如：
     dynamic blog = 'https://autoref.cn';

     另外一种可选方式为明确地声明类型：
     String blog = 'https://autoref.cn';

   2、变量默认值
     未初始化的变量初始值为 null ，即使变量是数字类型，因为Dart语言中所有变量都是对象。
     int age;
     assert(age == null);  （当condition为false时，assert(condition)会抛出一个异常。）

   3、Object和dynamic的区别
     分别使用Object 和 dynamic，让父类引用指向子类对象
     Object调用方法时，编译时会报错
     Object obj = "lqr";
     print(obj.substring(1)); // IDE报错：The method 'substring' isn't defined for the type 'Object'.

     dynamic调用方法时，编译时不报错，但是运行时会存在安全隐患
     dynamic是明确声明（var是类型推导）
     dynamic obj = "lqr";
     print(obj.substring(1)); // qr


二、常量
   使用 final 或 const 声明，表明变量的值不能改变。
   1、final
     final类型的变量只能设置一次，可以在第一次使用的时候再初始化。
     // 正确
     final pre = 'https://';
     final String web = 'autoref.cn';

     // 正确
     var a = 1;
     final b = a;

     // 错误，final 变量只能赋值一次
     pre = 'game';

   2、const
     const是运行时常量（const变量无疑就是final），需要在声明时赋值初始化，在编译时就确定值。
     // 正确
     const one = 100;
     const double num = 3.14 * one;

     // 正确
     const a = 2;
     const b = a;

     // 错误：const 变量必须初始化一个常量值
     var c = 1;
     const d = c;

     // 错误：const 变量必须初始化一个常量值
     final e = 1;
     const f = e;

     // 错误，需要在声明时赋值初始化
     const name;

     const关键字不仅能声明常量变量，也可以用来创建常量值，任何变量都可以有一个常量值：
     var foo = const [];
     final bar = const [];
     const baz = []; // 相当于 `const []`

     对于foo，有一个常量值，但是可以改变它的值：
     foo = [1, 2, 3];

     对于baz，本身是常量变量，不能改变它的值。
   总结：
   1：实例变量只能是final，不能为const。final声明的实例变量必须在构造方法体开始前初始化。
   2：flnal 或者 const 不能和 var 同时使用。

三、[Dart 没有]非零即真
   js 中存在非零即真、非空即真的特性，但在 Dart 中没有！！   Dart 要求 if() 语句必须传入一个 bool 类型：
   Dart中没有非零即真，也没有非空即真
   var flag = "true";
   if (flag) { // IDE报错：Conditions must have a static type of 'bool'.
     print("执行代码");
   }
   注意：Dart 不支持非空即真或者非 0 即真，必须有明确的 bool 类型

四、字符串类型
   Dart 有三种定义字符串的方式：
   1、单引号('')：与双引号相同。
   2、双引号("")：与单引号相同。
   3、三引号("""""")：可以定义多行字符串，不需要借助 \n。
   例如定义三种字符串：
   var str1 = 'abc';
   var str2 = "abc";
   var str3 = """
   abc
   cba
   nba
   """;

   小技巧：如果字符串中存在双引号，又不想转义的话，可以使用单引号来定义该字符串，反之使用双引号。
   print('a"b"c'); // a"b"c
   print("a'b'c"); // a'b'c

五、集合类型
   Dart 集合类型有：
   1、列表 List：[ele1, ele2, ele2, ele1]
   2、集合 Set：{ele1, ele2, ele3}
   3、映射 Map：{"key1" : value1, "key2" : value2}

   例子如下：
   // 1. 列表List：[];
   var names = ["abc", "cba", "nba", "cba"];
   names.add("mba");
   // names.remove(value);
   // names.removeAt(index);

   // 2. 集合Set：{};
   var movies = {"星际穿越", "大话西游", "盗梦空间"};
   names = Set<String>.from(names).toList(); // 可以用Set来去重
   print(names);

   // 3. 映射Map
   var info = {
     "name": "lqr",
     "age": 18,
   };











