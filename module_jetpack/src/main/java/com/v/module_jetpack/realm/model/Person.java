package com.v.module_jetpack.realm.model;

import io.realm.RealmObject;
import io.realm.annotations.Ignore;
import io.realm.annotations.PrimaryKey;

/**
 * https://codeleading.com/article/73763610221/
 * <p>
 * ClassName: User
 * Description: Model类只要继承RealmObject即可.
 *
 * @author zhuming
 * @package_name com.v.module_database.realm
 * @date 2023/9/17 11:23
 */

/**
 * 1、字段类型:
 * Model类中可以包含的字段类型包括基本数据类型(及它们的装箱类型)和Date类, 另外也可以包含RealmObject的子类或者是RealmList<? extends RealmObject>.
 *
 * 2、字段性质:
 * 在字段上加注解可以定义字段的性质:
 *
 * @Required表明字段非null.
 * 原生类型和RealmList类型默认是非null的.
 * RealmObject字段永远是可以为null的.
 *
 * @Ignore表示字段不会被存储.
 *
 * @Index加索引.
 *
 * @PrimaryKey加主键, 主键只能有一个, 主键默认加索引.
 *
 * 但是注意主键默认没有加@Required, 如果主键要求非null, 需要显式添加@Required.
 */

//相当于sqllite的表
//字段表示表中的列
public class Person extends RealmObject {
    @PrimaryKey
    private String user_id;
    private String name;
    private int age;

    public Person() {
    }

    public Person(String user_id, String name, int age) {
        this.user_id = user_id;
        this.name = name;
        this.age = age;
    }

    @Ignore
    private int sessionId;

    public String getUser_id() {
        return user_id;
    }

    public void setUser_id(String user_id) {
        this.user_id = user_id;
    }

    // Standard getters & setters generated by your IDE…
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public int getAge() {
        return age;
    }

    public void setAge(int age) {
        this.age = age;
    }

    public int getSessionId() {
        return sessionId;
    }

    public void setSessionId(int sessionId) {
        this.sessionId = sessionId;
    }

    @Override
    public String toString() {
        return "User{" +
                "user_id='" + user_id + '\'' +
                ", name='" + name + '\'' +
                ", age=" + age +
                ", sessionId=" + sessionId +
                '}';
    }
}


