apply plugin: 'com.android.library'

android {
    compileSdkVersion androidV.compileSdkVersion
    buildToolsVersion androidV.buildToolsVersion

    defaultConfig {
        minSdkVersion androidV.minSdkVersion
        targetSdkVersion androidV.targetSdkVersion

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        consumerProguardFiles "consumer-rules.pro"
    }

    compileOptions.encoding = "utf-8"
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation deps["appcompat_x"]
    implementation deps["constraint_layout"]
    testImplementation deps["junit"]
    androidTestImplementation deps["ext_junit"]
    androidTestImplementation deps["espresso_core"]

    //为什么rxjava使用还需要导入rxandroid包？
    //因为使用rxjava中的功能不全，大概只有80%，而剩余的20%需要rxandroid补全。比如：AndroidSchedulers.mainThread()就是rxandroid中的内容
    implementation deps["retrofit"]
    implementation deps["rxjava"]
    implementation deps["rxandroid"]
    implementation deps["adapter_rxjava"]
    implementation deps["converter_gson"]

    //防抖
    implementation "com.jakewharton.rxbinding2:rxbinding:$deps.rxbinding"
}
