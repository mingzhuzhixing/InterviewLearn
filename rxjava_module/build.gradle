apply plugin: 'com.android.library'

android {
    compileSdkVersion androidV.compileSdkVersion
    buildToolsVersion androidV.buildToolsVersion

    defaultConfig {
        minSdkVersion androidV.minSdkVersion
        targetSdkVersion androidV.targetSdkVersion

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        consumerProguardFiles "consumer-rules.pro"
    }

    compileOptions.encoding = "utf-8"
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'

    //为什么rxjava使用还需要导入rxandroid包？
    //因为使用rxjava中的功能不全，大概只有80%，而剩余的20%需要rxandroid补全。比如：AndroidSchedulers.mainThread()就是rxandroid中的内容
    implementation 'io.reactivex.rxjava2:rxjava:2.2.6'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation "com.squareup.retrofit2:retrofit:2.4.0"
    implementation "com.squareup.retrofit2:adapter-rxjava2:2.4.0"
    implementation "com.squareup.retrofit2:converter-gson:2.4.0"

    //防抖
    implementation 'com.jakewharton.rxbinding2:rxbinding:2.1.1'
}
